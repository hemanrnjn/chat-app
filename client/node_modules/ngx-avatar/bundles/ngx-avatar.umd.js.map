{"version":3,"file":"ngx-avatar.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://ngx-avatar/lib/sources/async-source.ts","ng://ngx-avatar/lib/sources/avatar-source.enum.ts","ng://ngx-avatar/lib/sources/facebook.ts","ng://ngx-avatar/lib/sources/twitter.ts","ng://ngx-avatar/lib/sources/google.ts","ng://ngx-avatar/lib/sources/custom.ts","ng://ngx-avatar/lib/sources/initials.ts","ng://ngx-avatar/lib/sources/gravatar.ts","ng://ngx-avatar/lib/sources/skype.ts","ng://ngx-avatar/lib/sources/value.ts","ng://ngx-avatar/lib/sources/vkontakte.ts","ng://ngx-avatar/lib/sources/github.ts","ng://ngx-avatar/lib/sources/source.factory.ts","ng://ngx-avatar/lib/avatar-config.token.ts","ng://ngx-avatar/lib/avatar.service.ts","ng://ngx-avatar/lib/avatar.component.ts","ng://ngx-avatar/lib/avatar.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Source } from './source';\nimport { AvatarSource } from './avatar-source.enum';\n\n/**\n * Contract of all async sources.\n * Every async source must implement the processResponse method that extracts the avatar url from the data\n */\nexport abstract class AsyncSource implements Source {\n  readonly sourceType: AvatarSource;\n\n  constructor(public sourceId: string) { }\n\n  abstract getAvatar(size?: number): string;\n  abstract processResponse(data: any, size?: number): string;\n\n}\n","export enum AvatarSource {\n  FACEBOOK = \"facebook\",\n  GOOGLE = \"google\",\n  TWITTER = \"twitter\",\n  VKONTAKTE = \"vkontakte\",\n  SKYPE = \"skype\",\n  GRAVATAR = \"gravatar\",\n  GITHUB = \"github\",\n  CUSTOM = \"custom\",\n  INITIALS = \"initials\",\n  VALUE = \"value\"\n}\n","import { Source } from './source';\nimport { AvatarSource } from './avatar-source.enum';\n/**\n *  Facebook source impelementation.\n *  Fetch avatar source based on facebook identifier\n *  and image size\n */\nexport class Facebook implements Source {\n  readonly sourceType: AvatarSource = AvatarSource.FACEBOOK;\n\n  constructor(public sourceId: string) {\n  }\n\n  public getAvatar(size: number): string {\n    return 'https://graph.facebook.com/' +\n      `${this.sourceId}/picture?width=${size}&height=${size}`;\n  }\n}\n","import { Source } from './source';\nimport { AvatarSource } from './avatar-source.enum';\n\n/**\n *  Twitter source impelementation.\n *  Fetch avatar source based on google identifier\n *  and image size\n */\nexport class Twitter implements Source {\n  readonly sourceType: AvatarSource = AvatarSource.TWITTER;\n\n  constructor(public sourceId: string) {\n  }\n\n  public getAvatar(size: number): string {\n    const twitterImgSize = this.getImageSize(size);\n    return `https://twitter.com/${this.sourceId}/profile_image?size=${twitterImgSize}`;\n  }\n\n  private getImageSize(size: number) {\n    if (size <= 24) {\n      return 'mini';\n    }\n\n    if (size <= 48) {\n      return 'normal';\n    }\n\n    if (size <= 73) {\n      return 'bigger';\n    }\n\n    return 'original';\n  }\n\n}\n","import { AsyncSource } from './async-source';\nimport { AvatarSource } from './avatar-source.enum';\n\n/**\n *  Google source impelementation.\n *  Fetch avatar source based on google identifier\n *  and image size\n */\nexport class Google extends AsyncSource {\n  readonly sourceType: AvatarSource = AvatarSource.GOOGLE;\n\n  constructor(sourceId: string) {\n    super(sourceId);\n  }\n\n  public getAvatar(): string {\n    return `https://picasaweb.google.com/data/entry/api/user/${this.sourceId}?alt=json`;\n  }\n\n\n  /**\n   * Extract google avatar from json data\n   */\n  public processResponse(data: any, size?: number): string {\n    const avatarSrc = data.entry.gphoto$thumbnail.$t;\n    if (avatarSrc) {\n      return avatarSrc.replace('s64', 's' + size);\n    }\n  }\n}\n","import { Source } from './source';\nimport { AvatarSource } from './avatar-source.enum';\n/**\n *  Custom source impelementation.\n *  return custom image as an avatar\n *\n */\nexport class Custom implements Source {\n  readonly sourceType: AvatarSource = AvatarSource.CUSTOM;\n\n  constructor(public sourceId: string) {\n  }\n\n  public getAvatar(): string {\n    return this.sourceId;\n  }\n}\n","import { Source } from \"./source\";\nimport { AvatarSource } from \"./avatar-source.enum\";\n\n/**\n * Initials source impelementation.\n * return the initals of the given value\n */\nexport class Initials implements Source {\n  \n  readonly sourceType: AvatarSource = AvatarSource.INITIALS;\n\n  constructor(\n    public sourceId: string\n  ) { }\n\n  public getAvatar(initialsSize: number): string {\n    return this.getInitials(this.sourceId, initialsSize);\n  }\n\n  /**\n   * Returns the initial letters of a name in a string.\n   */\n  private getInitials(name: string, size: number): string {\n    \n    name = name ? name.trim() : null;\n    \n    if (!name) {\n      return '';\n    }\n    \n    const initials = name.split(\" \");\n    \n    if (size && size < initials.length) {\n      return this.constructInitials(initials.slice(0, size));\n    } else {\n      return this.constructInitials(initials);\n    }\n  }\n\n  /**\n   * Iterates a person's name string to get the initials of each word in uppercase.\n   */\n  private constructInitials(elements: string[]): string {\n    if (!elements || !elements.length) {\n      return '';\n    }\n\n    return elements\n      .filter(element => element && element.length > 0)\n      .map(element => element[0].toUpperCase())\n      .join('');\n  }\n}\n","import isRetina from 'is-retina';\nimport { Md5 } from 'ts-md5/dist/md5';\nimport { Source } from './source';\nimport { AvatarSource } from './avatar-source.enum';\n\n/**\n *  Gravatar source impelementation.\n *  Fetch avatar source based on gravatar email\n */\nexport class Gravatar implements Source {\n  readonly sourceType: AvatarSource = AvatarSource.GRAVATAR;\n  public sourceId: string;\n\n  constructor(public value: string) {\n    this.sourceId = value.match('^[a-f0-9]{32}$') ? value : Md5.hashStr(value).toString();\n  }\n\n  public getAvatar(size: number): string {\n    const avatarSize = isRetina() ? size * 2 : size;\n    return `https://secure.gravatar.com/avatar/${this.sourceId}?s=${avatarSize}&d=404`;\n  }\n}\n","import { Source } from './source';\nimport { AvatarSource } from './avatar-source.enum';\n/**\n *  Skype source impelementation.\n *  Fetch avatar source based on skype identifier\n */\nexport class Skype implements Source {\n  readonly sourceType: AvatarSource = AvatarSource.SKYPE;\n\n  constructor(public sourceId: string) {\n  }\n\n  public getAvatar(): string {\n    return `https://api.skype.com/users/${this.sourceId}/profile/avatar`;\n  }\n}\n","import { Source } from './source';\nimport { AvatarSource } from './avatar-source.enum';\n\n/**\n *  Value source impelementation.\n *  return the value as avatar\n */\nexport class Value implements Source {\n  readonly sourceType: AvatarSource = AvatarSource.VALUE;\n\n  constructor(public sourceId: string) {\n  }\n\n  public getAvatar(): string {\n    return this.sourceId;\n  }\n}\n","import { AsyncSource } from './async-source';\nimport { AvatarSource } from './avatar-source.enum';\n\n/**\n *  Vkontakte source impelementation.\n *  Fetch avatar source based on vkontakte identifier\n *  and image size\n */\nconst apiVersion = 5.8;\nexport class Vkontakte extends AsyncSource {\n  readonly sourceType: AvatarSource = AvatarSource.VKONTAKTE;\n\n  constructor(sourceId: string) {\n    super(sourceId);\n  }\n\n  public getAvatar(size: number): string {\n    const imgSize = this.getImageSize(size);\n    return `https://api.vk.com/method/users.get?user_id=${this.sourceId}&v=${apiVersion}&fields=${imgSize}`;\n  }\n\n   /**\n   * extract vkontakte avatar from json data\n   */\n  public processResponse(data: any): string {\n    // avatar key property is the size used to generate avatar url\n    // size property is always the last key in the response object\n    const sizeProperty = Object.keys(data['response'][0]).pop();\n    // return avatar src\n    return data['response'][0][sizeProperty];\n  }\n\n  /**\n   * Returns image size related to vkontakte API\n   * @param size\n   */\n  private getImageSize(size: number): string {\n    if (size <= 50) {\n      return 'photo_50';\n    }\n\n    if (size <= 100) {\n      return 'photo_100';\n    }\n\n    if (size <= 200) {\n      return 'photo_200';\n    }\n\n    return 'photo_max';\n  }\n\n}\n","import { AsyncSource } from './async-source';\nimport { AvatarSource } from './avatar-source.enum';\n\n/**\n *  Github source impelementation.\n *  Fetch avatar source based on github identifier\n */\nexport class Github extends AsyncSource {\n  readonly sourceType: AvatarSource = AvatarSource.GITHUB;\n\n  constructor(sourceId: string) {\n    super(sourceId);\n  }\n\n  public getAvatar(): string {\n    return `https://api.github.com/users/${this.sourceId}`;\n  }\n\n  /**\n  * extract github avatar from json data\n  */\n public processResponse(data: any, size?: number): string {\n    if (size) {\n      return `${data.avatar_url}&s=${size}`;\n    }\n    return data.avatar_url;\n  }\n\n\n}\n","import { Source } from \"./source\";\nimport { Facebook } from \"./facebook\";\nimport { Twitter } from \"./twitter\";\nimport { Google } from \"./google\";\nimport { Custom } from \"./custom\";\nimport { Initials } from \"./initials\";\nimport { Gravatar } from \"./gravatar\";\nimport { Skype } from \"./skype\";\nimport { Value } from \"./value\";\nimport { Vkontakte } from \"./vkontakte\";\nimport { Github } from \"./github\";\n\nimport { Injectable } from \"@angular/core\";\nimport { SourceCreator } from \"./source.creator\";\nimport { AvatarSource } from \"./avatar-source.enum\";\n\n/**\n * Factory class that implements factory method pattern.\n * Used to create Source implementation class based\n * on the source Type\n */\n@Injectable()\nexport class SourceFactory {\n  private sources: { [key: string]: SourceCreator } = {};\n\n  constructor() {\n    this.sources[AvatarSource.FACEBOOK] = Facebook;\n    this.sources[AvatarSource.TWITTER] = Twitter;\n    this.sources[AvatarSource.GOOGLE] = Google;\n    this.sources[AvatarSource.SKYPE] = Skype;\n    this.sources[AvatarSource.GRAVATAR] = Gravatar;\n    this.sources[AvatarSource.CUSTOM] = Custom;\n    this.sources[AvatarSource.INITIALS] = Initials;\n    this.sources[AvatarSource.VALUE] = Value;\n    this.sources[AvatarSource.VKONTAKTE] = Vkontakte;\n    this.sources[AvatarSource.GITHUB] = Github;\n  }\n\n  public newInstance(sourceType: AvatarSource, sourceValue: string): Source {\n    return new this.sources[sourceType](sourceValue);\n  }\n}\n","import { InjectionToken } from \"@angular/core\";\n\nimport { AvatarConfig } from \"./avatar-config\";\n/**\n * Token used to inject the AvatarConfig object\n */\nexport const AVATAR_CONFIG = new InjectionToken<AvatarConfig>(\"avatar.config\");\n","import { Observable } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { AVATAR_CONFIG } from \"./avatar-config.token\";\nimport { AvatarConfig } from \"./avatar-config\";\nimport { Injectable, Inject, Optional } from \"@angular/core\";\nimport { AvatarSource } from \"./sources/avatar-source.enum\";\n\n/**\n * list of Supported avatar sources\n */\nconst defaultSources = [\n  AvatarSource.FACEBOOK,\n  AvatarSource.GOOGLE,\n  AvatarSource.TWITTER,\n  AvatarSource.VKONTAKTE,\n  AvatarSource.SKYPE,\n  AvatarSource.GRAVATAR,\n  AvatarSource.GITHUB,\n  AvatarSource.CUSTOM,\n  AvatarSource.INITIALS,\n  AvatarSource.VALUE\n];\n\n/**\n * list of default colors\n */\nconst defaultColors = [\n  \"#1abc9c\",\n  \"#3498db\",\n  \"#f1c40f\",\n  \"#8e44ad\",\n  \"#e74c3c\",\n  \"#d35400\",\n  \"#2c3e50\",\n  \"#7f8c8d\"\n];\n\n/**\n * Provides utilities methods related to Avatar component\n */\n@Injectable()\nexport class AvatarService {\n  public avatarSources: AvatarSource[] = defaultSources;\n  public avatarColors: string[] = defaultColors;\n\n  constructor(\n    @Optional()\n    @Inject(AVATAR_CONFIG)\n    private avatarConfig: AvatarConfig,\n    private http: HttpClient\n  ) {\n    if (this.avatarConfig) {\n      this.overrideAvatarSources();\n      this.overrideAvatarColors();\n    }\n  }\n\n  public fetchAvatar(avatarUrl: string): Observable<any> {\n    return this.http.get(avatarUrl);\n  }\n\n  public getRandomColor(avatarText: string): string {\n    if (!avatarText) {\n      return \"transparent\";\n    }\n    const asciiCodeSum = this.calculateAsciiCode(avatarText);\n    return this.avatarColors[asciiCodeSum % this.avatarColors.length];\n  }\n\n  public copmareSources(\n    sourceType1: AvatarSource,\n    sourceType2: AvatarSource\n  ): number {\n    return (\n      this.getSourcePriority(sourceType1) - this.getSourcePriority(sourceType2)\n    );\n  }\n\n  public isSource(source: string): boolean {\n    return this.avatarSources.includes(source as AvatarSource);\n  }\n\n  public isTextAvatar(sourceType: AvatarSource): boolean {\n    return [AvatarSource.INITIALS, AvatarSource.VALUE].includes(sourceType);\n  }\n\n  private overrideAvatarSources(): void {\n    // TODO: add sources to avatarConfig and implement this\n  }\n\n  private overrideAvatarColors(): void {\n    if (this.avatarConfig.colors && this.avatarConfig.colors.length > 0) {\n      this.avatarColors = this.avatarConfig.colors;\n    }\n  }\n\n  private calculateAsciiCode(value: string): number {\n    return value\n      .split(\"\")\n      .map(letter => letter.charCodeAt(0))\n      .reduce((previous, current) => previous + current);\n  }\n\n  private getSourcePriority(sourceType: AvatarSource) {\n    return this.avatarSources.indexOf(sourceType);\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  OnChanges,\n  SimpleChange\n} from \"@angular/core\";\n\nimport { Source } from \"./sources/source\";\nimport { AsyncSource } from \"./sources/async-source\";\nimport { SourceFactory } from \"./sources/source.factory\";\nimport { AvatarService } from \"./avatar.service\";\nimport { AvatarSource } from \"./sources/avatar-source.enum\";\n\n/**\n * Universal avatar component that\n * generates avatar from different sources\n *\n * export\n * class AvatarComponent\n * implements {OnChanges}\n */\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: \"ngx-avatar\",\n  styles: [\n    `\n      :host {\n        border-radius: \"50%\";\n      }\n    `\n  ],\n  template: `\n    <div (click)=\"handleClickEvent($event)\" class=\"avatar-container\" [ngStyle]=\"hostStyle\">\n    <img *ngIf=\"src\"\n      [src]=\"src\"\n      [width]=\"size\"\n      [height]=\"size\"\n      [ngStyle]=\"avatarStyle\"\n      (error)=\"fetch($event)\"\n      class=\"avatar-content\"\n     />\n\n   <div *ngIf=\"data && !src\"\n     [ngStyle]=\"avatarStyle\"\n     class=\"avatar-content\">{{data}}</div>\n   </div>`\n})\nexport class AvatarComponent implements OnChanges {\n  @Input()\n  round: boolean = true;\n  @Input()\n  size: number = 50;\n  @Input()\n  textSizeRatio: number = 3;\n  @Input()\n  bgColor: string;\n  @Input()\n  fgColor = \"#FFF\";\n  @Input()\n  borderColor: string;\n  @Input()\n  style: any = {};\n  @Input()\n  cornerRadius = 0;\n  @Input(\"facebookId\")\n  facebook: string;\n  @Input(\"twitterId\")\n  twitter: string;\n  @Input(\"googleId\")\n  google: string;\n  @Input(\"vkontakteId\")\n  vkontakte: string;\n  @Input(\"skypeId\")\n  skype: string;\n  @Input(\"gravatarId\")\n  gravatar: string;\n  @Input(\"githubId\")\n  github: string;\n  @Input(\"src\")\n  custom: string;\n  @Input(\"name\")\n  initials: string;\n  @Input(\"value\")\n  value: string;\n  @Input(\"placeholder\")\n  placeholder: string;\n  @Input(\"initialsSize\")\n  initialsSize: number;\n  @Output()\n  clickOnAvatar: EventEmitter<any> = new EventEmitter<any>();\n\n  // avatar img src\n  public src: string;\n  // avatar text value\n  public data: string;\n  public avatarStyle: any = {};\n  public hostStyle: any = {};\n\n  private _currentSource = 0;\n  private _sources: Source[] = Array();\n\n  constructor(\n    public elementRef: ElementRef,\n    public sourceFactory: SourceFactory,\n    private avatarService: AvatarService\n  ) { }\n\n  // handle click event\n  handleClickEvent(event: any) {\n    if (event) {\n      this.clickOnAvatar.emit(this._sources[this._currentSource - 1]);\n    }\n  }\n\n  /**\n   * Detect inputs change\n   *\n   * param {{ [propKey: string]: SimpleChange }} changes\n   *\n   * memberof AvatarComponent\n   */\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n    for (const propName in changes) {\n      if (this.avatarService.isSource(propName)) {\n        const currentValue = changes[propName].currentValue;\n        this._addSource(AvatarSource[propName.toUpperCase()], currentValue);\n      }\n    }\n    // reintialize the avatar component when a source property value has changed\n    // the fallback system must be re-invoked with the new values.\n    this._initializeAvatar();\n  }\n\n  /**\n   * Initialize the avatar component and its fallback system\n   */\n  _initializeAvatar() {\n    this._currentSource = 0;\n    if (this._sources.length > 0 && this._sources[this._currentSource]) {\n      // Order sources array by source priority\n      this._sources.sort((source1, source2) => this.avatarService.copmareSources(source1.sourceType, source2.sourceType));\n      // Host style\n      this.hostStyle = {\n        width: this.size + \"px\",\n        height: this.size + \"px\"\n      };\n      // Fetch avatar source\n      this.fetch();\n    }\n  }\n\n  /**\n   * Fetch avatar source\n   *\n   * param {any} event\n   *\n   * memberOf AvatarComponent\n   */\n  fetch(event?: any) {\n    const avatarSource = this._sources[this._currentSource];\n    if (!avatarSource) {\n      return false;\n    }\n    if (this.avatarService.isTextAvatar(avatarSource.sourceType)) {\n      this.data = avatarSource.getAvatar(this.initialsSize);\n      this.src = undefined;\n      this.avatarStyle = this._initialsStyle(avatarSource.sourceId);\n    } else {\n      this.avatarStyle = this._imageStyle();\n      if (avatarSource instanceof AsyncSource) {\n        this._fetchAsyncAvatar(avatarSource);\n      } else {\n        this.src = avatarSource.getAvatar(this.size);\n      }\n    }\n    this._currentSource++;\n  }\n\n  /**\n   *\n   * returns initials style\n   *\n   * memberOf AvatarComponent\n   */\n  _initialsStyle(avatarValue: string) {\n    return {\n      textAlign: \"center\",\n      borderRadius: this.round ? \"100%\" : this.cornerRadius + \"px\",\n      border: this.borderColor ? \"1px solid \" + this.borderColor : \"\",\n      textTransform: \"uppercase\",\n      color: this.fgColor,\n      backgroundColor: this.bgColor\n        ? this.bgColor\n        : this.avatarService.getRandomColor(avatarValue),\n      font:\n        Math.floor(this.size / this.textSizeRatio) +\n        \"px Helvetica, Arial, sans-serif\",\n      lineHeight: this.size + \"px\",\n      ...this.style\n    };\n  }\n\n  /**\n   *\n   * returns image style\n   *\n   * memberOf AvatarComponent\n   */\n  _imageStyle() {\n    return {\n      maxWidth: \"100%\",\n      borderRadius: this.round ? \"50%\" : this.cornerRadius + \"px\",\n      border: this.borderColor ? \"1px solid \" + this.borderColor : \"\",\n      width: this.size,\n      height: this.size,\n      ...this.style\n    };\n  }\n  /**\n   * Fetch avatar image asynchrounsly.\n   *\n   * param {Source} source represents avatar source\n   * memberof AvatarComponent\n   */\n  _fetchAsyncAvatar(source: AsyncSource) {\n    this.avatarService.fetchAvatar(source.getAvatar()).subscribe(\n      data => {\n        // extract avatar image from the response data\n        this.src = source.processResponse(data, this.size);\n      },\n      err => {\n        console.error(\n          `ngx-avatar: error while fetching ${source.sourceType} avatar `\n        );\n      }\n    );\n  }\n\n  /**\n   * Add avatar source\n   *\n   * param sourceType avatar source type e.g facebook,twitter, etc.\n   * param sourceValue  source value e.g facebookId value, etc.\n   */\n  _addSource(sourceType: AvatarSource, sourceValue: string) {\n    if (sourceValue) {\n      if (!this._updateExistingSource(sourceType, sourceValue)) {\n        this._sources.push(\n          this.sourceFactory.newInstance(sourceType, sourceValue)\n        );\n      }\n    }\n  }\n  /**\n   * This method check wether an avatar source has been added. If so\n   * the source value will be updated with the new value passed as\n   * paramater.\n   * It returns true if the source exists and update has been performed,\n   * returns false if the source was not found\n   *\n   * param {string} sourceType the type of the source\n   * param {string} sourceValue the new value of the source\n   *\n   * memberof AvatarComponent\n   */\n  _updateExistingSource(sourceType: string, sourceValue: string) {\n    const sourceIndex = this._sources.findIndex(\n      source => source.sourceType === sourceType.toUpperCase()\n    );\n    if (sourceIndex > -1) {\n      this._sources[sourceIndex].sourceId = sourceValue;\n      return true;\n    }\n    return false;\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AvatarComponent } from './avatar.component';\nimport { SourceFactory } from './sources/source.factory';\nimport { AvatarService } from './avatar.service';\nimport { AvatarConfig } from './avatar-config';\nimport { AVATAR_CONFIG } from './avatar-config.token';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  declarations: [\n    AvatarComponent\n  ],\n  providers: [\n    SourceFactory,\n    AvatarService\n  ],\n  exports: [\n    AvatarComponent\n  ]\n})\nexport class AvatarModule {\n  static forRoot(avatarConfig?: AvatarConfig): ModuleWithProviders {\n    return {\n      ngModule: AvatarModule,\n      providers: [\n        { provide: AVATAR_CONFIG, useValue: avatarConfig ? avatarConfig:{} }]\n    };\n  }\n}\n"],"names":["tslib_1.__extends","Md5","Injectable","InjectionToken","http","Optional","Inject","HttpClient","EventEmitter","Component","ElementRef","Input","Output","NgModule","CommonModule","HttpClientModule"],"mappings":"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"}
